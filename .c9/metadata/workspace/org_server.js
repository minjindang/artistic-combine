{"filter":false,"title":"org_server.js","tooltip":"/org_server.js","undoManager":{"mark":-1,"position":-1,"stack":[[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":84,"column":0},"action":"remove","lines":["//","// # SimpleServer","//","// A simple chat server using Socket.IO, Express, and Async.","//","var http = require('http');","var path = require('path');","","var async = require('async');","var socketio = require('socket.io');","var express = require('express');","","//","// ## SimpleServer `SimpleServer(obj)`","//","// Creates a new instance of SimpleServer with the following options:","//  * `port` - The HTTP port to listen on. If `process.env.PORT` is set, _it overrides this value_.","//","var router = express();","var server = http.createServer(router);","var io = socketio.listen(server);","","router.use(express.static(path.resolve(__dirname, 'client')));","var messages = [];","var sockets = [];","","io.on('connection', function (socket) {","    messages.forEach(function (data) {","      socket.emit('message', data);","    });","","    sockets.push(socket);","","    socket.on('disconnect', function () {","      sockets.splice(sockets.indexOf(socket), 1);","      updateRoster();","    });","","    socket.on('message', function (msg) {","      var text = String(msg || '');","","      if (!text)","        return;","","      socket.get('name', function (err, name) {","        var data = {","          name: name,","          text: text","        };","","        broadcast('message', data);","        messages.push(data);","      });","    });","","    socket.on('identify', function (name) {","      socket.set('name', String(name || 'Anonymous'), function (err) {","        updateRoster();","      });","    });","  });","","function updateRoster() {","  async.map(","    sockets,","    function (socket, callback) {","      socket.get('name', callback);","    },","    function (err, names) {","      broadcast('roster', names);","    }","  );","}","","function broadcast(event, data) {","  sockets.forEach(function (socket) {","    socket.emit(event, data);","  });","}","","server.listen(process.env.PORT || 3000, process.env.IP || \"0.0.0.0\", function(){","  var addr = server.address();","  console.log(\"Chat server listening at\", addr.address + \":\" + addr.port);","});",""]}]}],[{"group":"doc","deltas":[{"start":{"row":0,"column":0},"end":{"row":13,"column":70},"action":"insert","lines":["// reference the http module so we can create a webserver","var http = require(\"http\");","","// create a server","http.createServer(function(req, res) {","    // on every request, we'll output 'Hello world'","    res.end(\"Hello world from Cloud9!\");","}).listen(process.env.PORT, process.env.IP);","","// Note: when spawning a server on Cloud9 IDE, ","// listen on the process.env.PORT and process.env.IP environment variables","","// Click the 'Run' button at the top to start your server,","// then click the URL that is emitted to the Output tab of the console"]}]}]]},"ace":{"folds":[],"scrolltop":970,"scrollleft":0,"selection":{"start":{"row":13,"column":38},"end":{"row":13,"column":38},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":68,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1428755185000,"hash":"4590e746dee1ddd1d46f5cb2725b75b2cd7040e8"}